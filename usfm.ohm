usfmBible{

			File = scripture 

			backSlash = "\\"
			newLine = ("\r" | "\n")+
			spaceChar = " "
			spaceOrNewLine = " " | newLine
			char = ~(backSlash) ~(newLine) ~spaceChar ~("|") any
			//char = letter | digit | punctuations 
			//punctuations = "!" | "\"" | "#" | "$" | "%" | "&" | "(" | ")"  | "+" | "-" | "." | "/" | ":" | ";" | "<" | "=" | ">" | "?" | "@" | "[" | "]" | "^" | "_" | "`" | "{"  | "}"  | "’" | "‘" | "“" | "”" | "।" | "]" | "~"
			text =  newLine? word+
			number = digit+
			word = spaceChar? char+ spaceChar?

			bookCode = "GEN" | "EXO" | "LEV" | "NUM" | "DEU" | "JOS" | "JDG" | "RUT" | "1SA" | "2SA" | "1KI" | "2KI" | 
							"1CH" | "2CH" | "EZR" | "NEH" | "EST" | "JOB" | "PSA" | "PRO" | 
							"ECC" | "SNG" | "ISA" | "JER" | "LAM" | "EZK" | "DAN" | 
							"HOS" | "JOL" | "AMO" | "OBA" | "JON" | "MIC" | "NAM" | "HAB" | 
							"ZEP" | "HAG" | "ZEC" | "MAL" | "MAT" | "MRK" | "LUK" | 
							"JHN" | "ACT" | "ROM" | "1CO" | "2CO" | "GAL" | "EPH" | "PHP" | 
							"COL" | "1TH" | "2TH" | "1TI" | "2TI" | "TIT" | "PHM" | 
							"HEB" | "JAS" | "1PE" | "2PE" | "1JN" | "2JN" | "3JN" | "JUD" | 
							"REV" | "TOB" | "JDT" | "ESG" | "WIS" | "SIR" | "BAR" | 
							"LJE" | "S3Y" | "SUS" | "BEL" | "1MA" | "2MA" | "3MA" | "4MA" | 
							"1ES" | "2ES" | "MAN" | "PS2" | "ODA" | "PSS" | "EZA" | 
							"5EZ" | "6EZ" | "DAG" | "PS3" | "2BA" | "LBA" | "JUB" | "ENO" | 
							"1MQ" | "2MQ" | "3MQ" | "REP" | "4BA" | "LAO" | "FRT" | 
							"BAK" | "OTH" | "INT" | "CNC" | "GLO" | "TDX" | "NDX"


			scripture = metaData content

			content = chapter+


			metaData = bookIdentification bookHeaders* introduction* 	bookChapterLabel?

			bookIdentification = idElement usfmElement?

			bookHeaders = hElement | ideElement | remElement | tocElement | tocaElement | stsElement | mt | mte | esbElement

			introduction = ibElement | ieElement | iexElement | ili 
							| imElement | imiElement | imqElement | imt | imte | io 
							| iotElement | ipiElement | ipqElement | iprElement | ipElement | iqElement | isElement | remElement | esbElement
			

			bookChapterLabel = clElement

			chapter = chapterHeader metaScripture* verseElement+

			chapterHeader = cElement (caElement | cpElement | clElement | cdElement)*

			metaScripture = sectionHeader | mte | remElement | iexElement | ipElement | spElement | litElement | qaElement | notesElement | figureElement  | milestoneElement | zNameSpace | esbElement | paraElement
            
 			sectionHeader  = sectionElement sectionPostHeader* ipElement*
			sectionPostHeader = srElement | rElement | dElement | mrElement
			verseElement = newLine? backSlash "v" spaceChar verseNumber (vaElement | vpElement)*  (verseText | metaScripture)+
			
			verseNumber = number ("-" number)? spaceOrNewLine

			sectionElement = sectionElementWithTitle | sectionElementWithoutTitle | msElement

			sectionElementWithTitle = sectionMarker (chapterContentTextContent | notesElement | milestoneElement)+ 
			sectionElementWithoutTitle = sdMarker 
			sectionMarker = newLine backSlash ( "s1" | "s2" | "s3" | "s4" | "s" ) spaceChar
			sdMarker = newLine backSlash "sd" number spaceChar*

			paraElement = newLine? backSlash paraMarker spaceChar*

			altVerseNumberElement = altVerseNumberMarker number altVerseNumberMarker "*"
			altVerseNumberMarker = backSlash "va" 

			publishedCharElement = publishedCharMarker text publishedCharMarker "*"  
			
			publishedCharMarker = backSlash "vp"
			verseText = chapterContentTextContent
            

			paraMarker = paraUnNumberedMarker | paraNumberedMarker
			paraUnNumberedMarker =   ("po" | "m"  | "pr" | "cls" | "pmo" | "pm" | "pmc" | "pmr" | "pmi" | "nb" | "pc" | "b" | "pb" | "qr" | "qc" | "qd" | "lh" | "lf"  | "p" )
			paraNumberedMarker =  ("pi" | "ph" | "q" | "qm" | "lim") number?


			qaElement = newLine backSlash "qa" spaceChar text

			cElement = newLine backSlash "c" spaceChar number 
			caElement = newLine backSlash "ca" spaceChar number backSlash "ca*"
			cdElement = newLine backSlash "cd" spaceChar ((chapterContentTextContent | notesElement | milestoneElement)+ | notesElement)+
			clElement = newLine backSlash "cl"  spaceChar text
			cpElement = newLine backSlash "cp"  spaceChar text
			dElement = newLine backSlash "d"  spaceChar (chapterContentTextContent | notesElement | milestoneElement)+
			
			hElement = newLine backSlash "h" number? spaceChar text
			remElement = newLine backSlash "rem" spaceChar (chapterContentTextContent | notesElement | milestoneElement)+
			stsElement = newLine backSlash "sts" spaceChar text

            spElement = newLine backSlash "sp" spaceChar (chapterContentTextContent | notesElement | milestoneElement)+

			ibElement = newLine backSlash "ib" spaceChar? 
			idElement = backSlash "id"  spaceChar bookCode  (spaceChar text)?
			ideElement = newLine backSlash "ide"  spaceChar text
			ieElement = newLine backSlash "ie"
			iexElement = newLine backSlash "iex"  spaceChar text
			
			imElement = newLine backSlash "im" spaceChar bookIntroductionTitlesTextContent
			imiElement = newLine backSlash "imi" spaceChar bookIntroductionTitlesTextContent
			imqElement = newLine backSlash "imq" spaceChar bookIntroductionTitlesTextContent
			ili = iliElement+
			iliElement = newLine backSlash "ili" number? spaceChar bookIntroductionTitlesTextContent
			imt = imtElement+
			imtElement = newLine backSlash "imt" number? spaceChar bookIntroductionTitlesTextContent
			imte = imteElement+
			imteElement = newLine backSlash "imte" number? spaceChar bookIntroductionTitlesTextContent
			io = ioElement+
			ioElement = newLine backSlash "io" number? spaceChar bookIntroductionTitlesTextContent
			iotElement = newLine backSlash "iot" spaceChar bookIntroductionTitlesTextContent
			ipElement = newLine backSlash "ip" spaceChar bookIntroductionTitlesTextContent
			ipiElement = newLine backSlash "ipi" spaceChar bookIntroductionTitlesTextContent
			ipqElement = newLine backSlash "ipq" spaceChar bookIntroductionTitlesTextContent
			iprElement = newLine backSlash "ipr" spaceChar bookIntroductionTitlesTextContent
			iq = iqElement+
			iqElement = newLine backSlash "iq" number? spaceChar bookIntroductionTitlesTextContent
			isElement = newLine backSlash "is" number? spaceChar bookIntroductionTitlesTextContent
			
			mrElement = newLine backSlash "mr" spaceChar text
			msElement = newLine backSlash "ms" number? spaceChar text
			mt = mtElement+
			mtElement = newLine backSlash "mt" number? spaceChar (chapterContentTextContent | notesElement | milestoneElement)+
			mte = mteElement+
			mteElement = newLine backSlash "mte" number? spaceChar (chapterContentTextContent | notesElement | milestoneElement)+
			rElement = newLine backSlash "r" spaceChar (chapterContentTextContent | notesElement | milestoneElement)+
			
			srElement = newLine backSlash "sr" spaceChar (chapterContentTextContent | notesElement | milestoneElement)+
			tocElement = newLine backSlash ("toc1" | "toc2" | "toc3") (spaceChar text)?
			tocaElement = newLine backSlash ("toca1" | "toca2" | "toca3") (spaceChar text)?
			usfmElement = newLine backSlash "usfm" spaceChar version
			version = number ("." number)?
			vaElement = backSlash "va" spaceChar number backSlash "va*" spaceChar?
			vpElement = backSlash "vp" spaceChar text backSlash "vp*" spaceChar?


			notesElement = footnoteElement | crossrefElement
			footnoteElement = fElement | feElement | efElement
			fElement = backSlash  "f" spaceChar? footnoteContent* backSlash "f*" spaceChar?
			feElement = backSlash  "fe"  spaceChar? footnoteContent* backSlash "fe*"spaceChar?
			efElement = backSlash  "ef"  spaceChar? footnoteContent* backSlash "ef*"spaceChar?
			crossrefElement = backSlash  ("xt"|"x" | "ex") spaceChar?  crossrefContent* backSlash ("xt*"|"x*" | "ex") spaceChar?

			footnoteContent = text | footnoteContentElement | nestedCharElement
			footnoteContentElement = backSlash "fr" spaceChar
							| backSlash "fq" spaceChar
							| backSlash "fqa" spaceChar
							| backSlash "fk" spaceChar
							| backSlash "fl" spaceChar
							| backSlash "fw" spaceChar
							| backSlash "fp" spaceChar
							| backSlash "ft" spaceChar
							| backSlash "fv" spaceChar
							| backSlash "fv*" spaceChar
							| backSlash "fdc" spaceChar
							| backSlash "fdc*" spaceChar
							| backSlash "fm" spaceChar

			crossrefContent  = text | crossrefContentElement | nestedCharElement | attributes
			crossrefContentElement = backSlash "xo" spaceChar
							| backSlash "xk" spaceChar
							| backSlash "xq" spaceChar
							| backSlash "xt" spaceChar
							| backSlash "xta" spaceChar
							| backSlash "xop" spaceChar
							| backSlash "xop*" spaceChar
							| backSlash "xot" spaceChar
							| backSlash "xot*" spaceChar
							| backSlash "xnt" spaceChar
							| backSlash "xnt*" spaceChar
							| backSlash "xdc" spaceChar
							| backSlash "xdc*" spaceChar
							| backSlash "rq" spaceChar
							| backSlash "rq*" spaceChar

			nestedCharElement = nestedInLineCharElement | nestedInLineCharAttributeElement | nestedInLineCharNumberedElement
			nestedInLineCharElement = newLine? backSlash "+add" spaceChar (text | nestedCharElement)+ backSlash "+add" "*" spaceChar?
            			| newLine? backSlash "+bk" spaceChar (text | nestedCharElement)+ backSlash "+bk" "*" spaceChar?
                        | newLine? backSlash "+dc" spaceChar (text | nestedCharElement)+ backSlash "+dc" "*" spaceChar?
						| newLine? backSlash "+k" spaceChar (text | nestedCharElement)+ backSlash "+k" "*" spaceChar?
                        | newLine? backSlash "+nd" spaceChar (text | nestedCharElement)+ backSlash "+nd" "*" spaceChar?
						| newLine? backSlash "+ord" spaceChar (text | nestedCharElement)+ backSlash "+ord" "*" spaceChar?
               			| newLine? backSlash "+pn" spaceChar (text | nestedCharElement)+ backSlash "+pn"  "*" spaceChar?
                        | newLine? backSlash "+png" spaceChar (text | nestedCharElement)+ backSlash "+png"  "*" spaceChar?
                        | newLine? backSlash "+addpn" spaceChar (text | nestedCharElement)+ backSlash "+addpn"  "*" spaceChar?
                        | newLine? backSlash "+qt" spaceChar (text | nestedCharElement)+ backSlash "+qt"  "*" spaceChar?
                        | newLine? backSlash "+sig" spaceChar (text | nestedCharElement)+ backSlash "+sig"  "*" spaceChar?
						| newLine? backSlash "+sls" spaceChar (text | nestedCharElement)+ backSlash "+sls"  "*" spaceChar?
                        | newLine? backSlash "+tl" spaceChar (text | nestedCharElement)+ backSlash "+tl"  "*" spaceChar?
                        | newLine? backSlash "+wj" spaceChar (text | nestedCharElement)+ backSlash "+wj"  "*" spaceChar?
                        | newLine? backSlash "+em" spaceChar (text | nestedCharElement)+ backSlash "+em"  "*" spaceChar?
                        | newLine? backSlash "+bd" spaceChar (text | nestedCharElement)+ backSlash "+bd"  "*" spaceChar?
                        | newLine? backSlash "+it" spaceChar (text | nestedCharElement)+ backSlash "+it"  "*" spaceChar?
                        | newLine? backSlash "+bdit" spaceChar (text | nestedCharElement)+ backSlash "+bdit"  "*" spaceChar?
                        | newLine? backSlash "+no" spaceChar (text | nestedCharElement)+ backSlash "+no"  "*" spaceChar?
                        | newLine? backSlash "+sc" spaceChar (text | nestedCharElement)+ backSlash "+sc"  "*" spaceChar?
                        | newLine? backSlash "+sup" spaceChar (text | nestedCharElement)+ backSlash "+sup"  "*" spaceChar?
                        | newLine? backSlash "+ndx" spaceChar (text | nestedCharElement)+ backSlash "+ndx"  "*" spaceChar?
                        | newLine? backSlash "+wg" spaceChar (text | nestedCharElement)+ backSlash "+wg"  "*" spaceChar?
                        | newLine? backSlash "+wh" spaceChar (text | nestedCharElement)+ backSlash "+wh"  "*" spaceChar?
                        | newLine? backSlash "+wa" spaceChar (text | nestedCharElement)+ backSlash "+wa"  "*" spaceChar?
                        | newLine? backSlash "+qs" spaceChar (text | nestedCharElement)+ backSlash "+qs"  "*" spaceChar?
                        | newLine? backSlash "+qac" spaceChar (text | nestedCharElement)+ backSlash "+qac"  "*" spaceChar?
                        | newLine? backSlash "+litl" spaceChar (text | nestedCharElement)+ backSlash "+litl"  "*" spaceChar?
                        | newLine? backSlash "+lik" spaceChar (text | nestedCharElement)+ backSlash "+lik"  "*" spaceChar?
						| newLine? backSlash "+rq" spaceChar (text | nestedCharElement)+ backSlash "+rq"  "*" spaceChar?
                        | newLine? backSlash "+ior" spaceChar bookIntroductionTitlesTextContent backSlash "+ior" "*" spaceChar?
                        | newLine? backSlash "+cat" spaceChar bookIntroductionTitlesTextContent backSlash "+cat" "*" spaceChar?

			charElement = inLineCharElement | inLineCharAttributeElement | inLineCharNumberedElement
            inLineCharElement = newLine? backSlash "add" spaceChar (text | nestedCharElement)+ backSlash "add" "*" spaceChar?
            			| newLine? backSlash "bk" spaceChar (text | nestedCharElement)+ backSlash "bk" "*" spaceChar?
						| newLine? backSlash "dc" spaceChar (text | nestedCharElement)+ backSlash "dc" "*" spaceChar?
						| newLine? backSlash "k" spaceChar (text | nestedCharElement)+ backSlash "k" "*" spaceChar?
                        | newLine? backSlash "nd" spaceChar (text | nestedCharElement)+ backSlash "nd" "*" spaceChar?
						| newLine? backSlash "ord" spaceChar (text | nestedCharElement)+ backSlash "ord" "*" spaceChar?
               			| newLine? backSlash "pn" spaceChar (text | nestedCharElement)+ backSlash "pn"  "*" spaceChar?
                        | newLine? backSlash "png" spaceChar (text | nestedCharElement)+ backSlash "png"  "*" spaceChar?
                        | newLine? backSlash "addpn" spaceChar (text | nestedCharElement)+ backSlash "addpn"  "*" spaceChar?
                        | newLine? backSlash "qt" spaceChar (text | nestedCharElement)+ backSlash "qt"  "*" spaceChar?
                        | newLine? backSlash "sig" spaceChar (text | nestedCharElement)+ backSlash "sig"  "*" spaceChar?
						| newLine? backSlash "sls" spaceChar (text | nestedCharElement)+ backSlash "sls"  "*" spaceChar?
                        | newLine? backSlash "tl" spaceChar (text | nestedCharElement)+ backSlash "tl"  "*" spaceChar?
                        | newLine? backSlash "wj" spaceChar (text | nestedCharElement)+ backSlash "wj"  "*" spaceChar?
                        | newLine? backSlash "em" spaceChar (text | nestedCharElement)+ backSlash "em"  "*" spaceChar?
                        | newLine? backSlash "bd" spaceChar (text | nestedCharElement)+ backSlash "bd"  "*" spaceChar?
                        | newLine? backSlash "it" spaceChar (text | nestedCharElement)+ backSlash "it"  "*" spaceChar?
                        | newLine? backSlash "bdit" spaceChar (text | nestedCharElement)+ backSlash "bdit"  "*" spaceChar?
                        | newLine? backSlash "no" spaceChar (text | nestedCharElement)+ backSlash "no"  "*" spaceChar?
                        | newLine? backSlash "sc" spaceChar (text | nestedCharElement)+ backSlash "sc"  "*" spaceChar?
                        | newLine? backSlash "sup" spaceChar (text | nestedCharElement)+ backSlash "sup"  "*" spaceChar?
                        | newLine? backSlash "ndx" spaceChar (text | nestedCharElement)+ backSlash "ndx"  "*" spaceChar?
                        | newLine? backSlash "wg" spaceChar (text | nestedCharElement)+ backSlash "wg"  "*" spaceChar?
                        | newLine? backSlash "wh" spaceChar (text | nestedCharElement)+ backSlash "wh"  "*" spaceChar?
                        | newLine? backSlash "wa" spaceChar (text | nestedCharElement)+ backSlash "wa"  "*" spaceChar?
                        | newLine? backSlash "qs" spaceChar (text | nestedCharElement)+ backSlash "qs"  "*" spaceChar?
                        | newLine? backSlash "qac" spaceChar (text | nestedCharElement)+ backSlash "qac"  "*" spaceChar?
                        | newLine? backSlash "litl" spaceChar (text | nestedCharElement)+ backSlash "litl"  "*" spaceChar?
                        | newLine? backSlash "lik" spaceChar (text | nestedCharElement)+ backSlash "lik"  "*" spaceChar?
						| newLine? backSlash "rq" spaceChar (text | nestedCharElement)+ backSlash "rq"  "*" spaceChar?
                        | newLine? backSlash "ior" spaceChar (text)+ backSlash "ior" "*" spaceChar?
                        | newLine? backSlash "cat" spaceChar (text | notesElement |  nestedCharElement | milestoneElement | figureElement | zNameSpace)+ backSlash "cat" "*" spaceChar?
			
                        
      
            inLineCharAttributeElement = newLine? backSlash "rb" spaceChar (text | nestedCharElement)+ attributes* backSlash "rb"  "*" spaceChar?
                        | newLine? backSlash "w" spaceChar (text | nestedCharElement)+ attributes* backSlash "w"  "*" spaceChar?
                        | newLine? backSlash "jmp" spaceChar (text | nestedCharElement)* attributes* backSlash "jmp"  "*" spaceChar?
			nestedInLineCharAttributeElement = newLine? backSlash "+rb" spaceChar (text | nestedCharElement)+ attributes* backSlash "+rb"  "*" spaceChar?
                        | newLine? backSlash "+w" spaceChar (text | nestedCharElement)+ attributes* backSlash "+w"  "*" spaceChar?
                        | newLine? backSlash "+jmp" spaceChar (text | nestedCharElement)* attributes* backSlash "+jmp"  "*" spaceChar?


            inLineCharNumberedElement = newLine? backSlash "liv" number? spaceChar (text | nestedCharElement)+ backSlash "liv"  "*" spaceChar?
            nestedInLineCharNumberedElement = newLine? backSlash "+liv" number? spaceChar (text | nestedCharElement)+ backSlash "+liv"  "*" spaceChar?
                        



            attributes = "|" ( char | " ")+
            
            figureElement = backSlash "fig" spaceChar caption  attributes? backSlash "fig*"
			caption = text

			table = headerRow? row+
			headerRow = trElement headerCell+
			headerCell = thElement | thrElement
			row = trElement cell+
			cell = tcElement | tcrElement

			trElement = newLine backSlash "tr" spaceChar
			thElement = backSlash "th" number spaceChar text
			thrElement = backSlash "thr" number spaceChar text
			tcElement = backSlash "tc" number spaceChar text
			tcrElement = backSlash "tcr" number spaceChar text

			li = (liElement)+
			liElement = newLine backSlash "li" number? spaceChar text


			
			litElement = newLine backSlash "lit" spaceChar ((chapterContentTextContent | notesElement | milestoneElement) | notesElement | milestoneElement)+


			bookIntroductionTitlesTextContent = (text | notesElement |  charElement | milestoneElement | figureElement | zNameSpace)+
			bookTitlesTextContent = (text | notesElement | charElement | zNameSpace)+
			chapterContentTextContent = text | charElement | table | li 
			bookIntroductionEndTitlesTextContent = (text | notesElement | charElement | milestoneElement | zNameSpace | esbElement)+

			milestoneElement = milestonePairElement | milestoneStandaloneElement
			milestoneStandaloneElement = newLine? backSlash milestoneName milestoneClosing
			milestonePairElement = (newLine? backSlash milestoneName "-s" spaceChar* attributes? milestoneClosing?) 
								| (newLine? backSlash milestoneName "-e" spaceChar* attributes? milestoneClosing?)
			milestoneName = (letter | digit | "_")+
			milestoneClosing = (backSlash "*") 

			zNameSpace = newLine? backSlash "z" char* spaceChar? text? (backSlash "*" )?

			esbElement = newLine backSlash "esb" spaceChar? (chapterContentTextContent | metaScripture )+ newLine? backSlash "esbe" spaceChar?
			
}