<html>

<head>
<meta charset="UTF-8">
<title>Ohm USFM parser</title>

<!-- <script src="https://unpkg.com/ohm-js@0.13.1/dist/ohm.min.js"> -->
<script src=./ohm.min.js>
</script>


<script type="text/javascript">


// Reads input from text area, pass it for parsing, displays the output
function check(){
	var src = document.getElementById("source").value;
	
		var out = parse(src);
		document.getElementById("output").innerHTML = JSON.stringify(out,null,4);
		//!!!!!check if we can get a library to display json like in jsonlint!!!!!!!!!
	
}

/************Parser**************/
function parse( str){
	var bib  = ohm.grammarFromScriptElement();
	
	var sem = bib.createSemantics();

	console.log("Parsing");

	
	var res =[]		


	//Actions enabling the matched string to be converted to JSON(to be changed according to new grammar)

	sem.addOperation('jsonCompose', {
			File : function(e){
					 e.jsonCompose();
					 
				return res;
		},

		Valid_content : function(e){
			e.jsonCompose()
		},

		Simple_element : function(_,m,){
			res.push({"tag": m.sourceString });
		},

		Text_element : function(_,m,_,t){
			res.push({"tag": m.sourceString, "content" : t.sourceString});
		},

		Opt_text_element : function(_,m,_,t){
			res.push({"tag": m.sourceString, "content" : t.sourceString});
		},

		Double_arg_element : function(_,m,_,v,_,t){
			res.push({"tag": m.sourceString, "value" : v.sourceString,
 										"text" : t.sourceString})
		}
	
	});

	var output = "";
 	//Matching the input with grammar and obtaining the JSON output string
 	try{
 		var mh = bib.match(str)
		var adapter = sem(mh);
		var output = adapter.jsonCompose();
 	}catch (err){
 		// output =  "Match failed !!!";
 		output = err.message;
 	}
	
return output;
}




</script>



<!-- **************The Grammar************* -->
<script type="text/ohm-js">


USFM_bible{

			File = Valid_content+

			char = ~("\\") any
			text = char+
			number = digit+
			word = (~(" ") any)+


			Valid_content = Simple_element | Text_element | Opt_text_element
							| Double_arg_element 
	
			
			// 1 Markers with no text
			simple_marker = "ie" | "b" | "ib"
			Simple_element = "\\" simple_marker 

			// 2 Markers with text
			text_marker = "ide" | "sts" | "rem"
							| "h" | "toc1" | "toc2"
							| "toc3" 
							| "ip" | "ipi" | "im"
							| "imi" | "ipq" | "imq"
			                | "ipr"  | "ib"
			                | "ili" | "iot" 
			                | "mr"| "sr"
			                | "r" | "c" | "cl"
			                | "cp"  | "pc"
			                | "pr" | "tr" 
			text_marker_numbered = "imt" number | "is" number | "iq" number
							| "io" number | "s" number 
			                | "mt" number | "mte" number | "ms" number
			                | "li" number | "th" number
			                | "thr" number | "tc" number | "tcr" number
			Text_element = "\\" (text_marker | text_marker_numbered) space* text

			// 3 Markers with optional text
			opt_text_marker = "p" | "m" 
							| "qr" | "qc"
			opt_text_marker_numbered =  "q" number
			Opt_text_element = "\\" (opt_text_marker | opt_text_marker_numbered) (space* text)?
			                
			// 4 Markers with a value and text
			double_arg_marker = "id" | "v"
			Double_arg_element = "\\" double_arg_marker space* word space* text

			// 5 Character style markers (e.g. \ior...\ior*)
			char_marker = "ior" | "iqt" | "rq"
			              | "va" | "vp" | "qs"
			              | "add" | "bk" | "dc"
			              | "qac" | "k" | "nd"
			              | "ord" | "pn" | "qt"
			              | "sig" | "sls" | "tl"
			              | "wj" | "em" | "bd"
			              | "it" | "bdit" | "no"
			              | "sc" | "ndx"
			Char_element = "\\" char_marker text "\\" char_marker "*"

			// 7 Notes makers
			notes_marker = "f...f*" | "fe...fe*"
			              | "fr" | "fk" | "fq"
			              | "fqa" | "fl" | "fp"
			              | "fv" | "ft" | "fdc...fdc*"
			              | "fm...fm* " | "x...x*" | "xo"
			              | "xk" | "xq" | "xt"
			              | "xot...xot*" | "xnt...xnt*" | "xdc...xdc*"
			              | "fl"

			// 9 Markers with attributes
			attrib_marker = "fig...fig*"




			}
</script>
</head>






<body>

<div style="float: left; width: 60%; height: 40%">
<textarea id="source" cols="75" rows="20"></textarea>
<br>
<button onclick="check()">Check</button>
</div>
<div style="float: right;width: 40%">
	<p id="output"> </p>
</div>

</body>
</html>
